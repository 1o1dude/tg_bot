import telebot
from telebot import types


name = ''
surname = ''
age = 0

bot = telebot.TeleBot("5112105842:AAGs0xlJIpYc0x_RcF3OblpnHn5MuwGm__A")

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç —ç—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –Ω–∏—á–µ–≥–æ, –ø—Ä–æ—Å—Ç–æ —Ç–∞–∫ üëã. (—Å –æ–∑–Ω–æ–∫–æ–º–ª–µ–Ω–∏–µ–º –∫–æ–º–∞–Ω–¥ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /help)")

@bot.message_handler(commands=['support'])
def send_welcome(message):
    bot.reply_to(message, "–ó–¥—Ä–∞—Å—Ç–≤—É–π—Ç–µ, –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º Vk- https://vk.com/vadim_gangster007, Discord- king Darvel#5822,GitHub- https://github.com/1o1dude)")

@bot.message_handler(commands=['info'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç, —Å–µ–π—á–∞—Å –∞–≤—Ç–æ—Ä-—Å–æ–∑–¥–∞—Ç–µ–ª—å —ç—Ç–æ–≥–æ —Ç–≥ –±–æ—Ç–∞ –∑–∞–Ω–∏–º–∞–µ—Ç—å—Å—è –ø—Ä–æ–µ–∫—Ç–æ–º https://github.com/1o1dude/ABOBAbeta –≤—ã –µ–≥–æ –º–æ–∂–µ—Ç–µ –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å –ø–µ—Ä–µ–≤–æ–¥–æ–º –¥–µ–Ω–µ–≥ –Ω–∞ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã 5228 6005 7292 1718 (—Å–±–µ—Ä/–º–∞—Å—Ç–µ—Ä –∫–∞—Ä–¥)")

@bot.message_handler(commands=['help'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç üòä, –≤–æ—Ç –º–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥: /reg, /help,/start,/info,/support")

@bot.message_handler(func=lambda m: True)
def echo_all(message):
    if message.text == '–ü—Ä–∏–≤–µ—Ç':
        bot.reply_to(message, 'ü§ñ –ø—Ä–∏–≤–µ—Ç –ø—Ä–∏–≤–µ—Ç ü§ñ')
    if message.text == '–ø—Ä–∏–≤–µ—Ç':
        bot.reply_to(message, 'ü§ñ –ø—Ä–∏–≤–µ—Ç –ø—Ä–∏–≤–µ—Ç ü§ñ')
    elif message.text == 'hi':
        bot.reply_to(message, 'Hi again!')
    elif message.text == '/reg':
        bot.send_message(message.from_user.id, "–ü—Ä–∏–≤–µ—Ç,–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç? üò®")
        bot.register_next_step_handler(message, reg_name)

    #bot.reply_to(message, message.text)

def reg_name(message):
    global name
    name = message.text
    bot.send_message(message.from_user.id, "–Ω–∞–∑–æ–≤–∏-–∫–∞ —Å–≤–æ–π –Ω–∏–∫-–Ω–µ–π–º üïπ")
    bot.register_next_step_handler(message, reg_surname)

def reg_surname(message):
    global surname
    surname = message.text
    bot.send_message(message.from_user.id, "–∞ —Ç–µ–ø–µ—Ä—å –Ω–∞–∑–æ–≤–∏ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç ü§î")
    bot.register_next_step_handler(message, reg_age)

def reg_age(message):
    global age
    #age = message.text
    while age == 0:
        try:
            age = int(message.text)
        except Exception:
            bot.send_message(message.from_user.id, "–í–≤–æ–¥–∏—Ç–µ —Ü–∏—Ñ—Ä–∞–º–∏!")

    keyboard = types.InlineKeyboardMarkup()
    key_yes = types.InlineKeyboardButton(text='–î–∞', callback_data='yes')
    keyboard.add(key_yes)
    key_no = types.InlineKeyboardButton(text='–ù–µ—Ç', callback_data='no')
    keyboard.add(key_no)
    question = '–¢–µ–±–µ ' + str(age) + ' –ª–µ—Ç? –ò —Ç–µ–±—è –∑–æ–≤—É—Ç: ' + name + ' ' + surname + '?'
    bot.send_message(message.from_user.id, text = question, reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call: True)
def callback_worker(call):
    if call.data == "yes":
        bot.send_message(call.message.chat.id, "–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è")
    elif call.data == "no":
        bot.send_message(call.message.chat.id, "–ü–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑ ü§∑‚Äçü•±")
        bot.send_message(call.message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
        bot.register_next_step_handler(call.message, reg_name)

bot.polling()
